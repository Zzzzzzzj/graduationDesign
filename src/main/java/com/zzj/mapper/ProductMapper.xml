<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzj.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.zzj.model.Product" >
    <id column="pid" property="pid" jdbcType="DOUBLE" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="market_price" property="marketPrice" jdbcType="DOUBLE" />
    <result column="shop_price" property="shopPrice" jdbcType="DOUBLE" />
    <result column="pimage" property="pimage" jdbcType="VARCHAR" />
    <result column="pdesc" property="pdesc" jdbcType="VARCHAR" />
    <result column="cno" property="cno" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, pname, market_price, shop_price, pimage, pdesc, cno
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zzj.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Double" >
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=DOUBLE}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Double" >
    delete from product
    where pid = #{pid,jdbcType=DOUBLE}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzj.model.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzj.model.Product" >
    insert into product (pid, pname, market_price, 
      shop_price, pimage, pdesc, 
      cno)
    values (#{pid,jdbcType=DOUBLE}, #{pname,jdbcType=VARCHAR}, #{marketPrice,jdbcType=DOUBLE}, 
      #{shopPrice,jdbcType=DOUBLE}, #{pimage,jdbcType=VARCHAR}, #{pdesc,jdbcType=VARCHAR}, 
      #{cno,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.zzj.model.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="marketPrice != null" >
        market_price,
      </if>
      <if test="shopPrice != null" >
        shop_price,
      </if>
      <if test="pimage != null" >
        pimage,
      </if>
      <if test="pdesc != null" >
        pdesc,
      </if>
      <if test="cno != null" >
        cno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=DOUBLE},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null" >
        #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopPrice != null" >
        #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="pimage != null" >
        #{pimage,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null" >
        #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="cno != null" >
        #{cno,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzj.model.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=DOUBLE},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null" >
        market_price = #{record.marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.shopPrice != null" >
        shop_price = #{record.shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.pimage != null" >
        pimage = #{record.pimage,jdbcType=VARCHAR},
      </if>
      <if test="record.pdesc != null" >
        pdesc = #{record.pdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.cno != null" >
        cno = #{record.cno,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set pid = #{record.pid,jdbcType=DOUBLE},
      pname = #{record.pname,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DOUBLE},
      shop_price = #{record.shopPrice,jdbcType=DOUBLE},
      pimage = #{record.pimage,jdbcType=VARCHAR},
      pdesc = #{record.pdesc,jdbcType=VARCHAR},
      cno = #{record.cno,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzj.model.Product" >
    update product
    <set >
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null" >
        market_price = #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopPrice != null" >
        shop_price = #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="pimage != null" >
        pimage = #{pimage,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null" >
        pdesc = #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="cno != null" >
        cno = #{cno,jdbcType=DOUBLE},
      </if>
    </set>
    where pid = #{pid,jdbcType=DOUBLE}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzj.model.Product" >
    update product
    set pname = #{pname,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DOUBLE},
      shop_price = #{shopPrice,jdbcType=DOUBLE},
      pimage = #{pimage,jdbcType=VARCHAR},
      pdesc = #{pdesc,jdbcType=VARCHAR},
      cno = #{cno,jdbcType=DOUBLE}
    where pid = #{pid,jdbcType=DOUBLE}
  </update>

  <select id="selectByType" parameterType="java.lang.Integer" resultType="com.zzj.model.Product">
    SELECT  pid, pname, market_price, shop_price, pimage, pdesc, cno FROM product
    <where>
          cno=#{cno}
    </where>

  </select>

</mapper>